# Generated by Django 5.2.5 on 2025-08-26 11:41

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import ccv.task_models


class Migration(migrations.Migration):
    dependencies = [
        (
            "ccv",
            "0003_remove_historicalmetadatatabletemplate__force_migration_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AsyncTaskStatus",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("EXPORT_EXCEL", "Export Excel Template"),
                            ("EXPORT_SDRF", "Export SDRF File"),
                            ("IMPORT_SDRF", "Import SDRF File"),
                            ("IMPORT_EXCEL", "Import Excel File"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("QUEUED", "Queued"),
                            ("STARTED", "Started"),
                            ("SUCCESS", "Success"),
                            ("FAILURE", "Failure"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="QUEUED",
                        max_length=10,
                    ),
                ),
                ("parameters", models.JSONField(blank=True, default=dict)),
                ("result", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("traceback", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("rq_job_id", models.CharField(blank=True, max_length=100)),
                ("queue_name", models.CharField(default="default", max_length=50)),
                ("progress_current", models.PositiveIntegerField(default=0)),
                ("progress_total", models.PositiveIntegerField(default=100)),
                ("progress_description", models.CharField(blank=True, max_length=200)),
                (
                    "metadata_table",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="async_tasks",
                        to="ccv.metadatatable",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="async_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=ccv.task_models.task_result_upload_path,
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=255)),
                ("content_type", models.CharField(blank=True, max_length=100)),
                ("file_size", models.PositiveIntegerField(default=0)),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When this file expires and should be cleaned up"),
                ),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("last_downloaded_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "task",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="file_result",
                        to="ccv.asynctaskstatus",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="asynctaskstatus",
            index=models.Index(fields=["user", "-created_at"], name="ccv_asyncta_user_id_52e10c_idx"),
        ),
        migrations.AddIndex(
            model_name="asynctaskstatus",
            index=models.Index(fields=["status", "-created_at"], name="ccv_asyncta_status_a7be94_idx"),
        ),
        migrations.AddIndex(
            model_name="asynctaskstatus",
            index=models.Index(
                fields=["task_type", "-created_at"],
                name="ccv_asyncta_task_ty_f1e532_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="asynctaskstatus",
            index=models.Index(fields=["rq_job_id"], name="ccv_asyncta_rq_job__8e52dd_idx"),
        ),
        migrations.AddIndex(
            model_name="taskresult",
            index=models.Index(fields=["task", "-created_at"], name="ccv_taskres_task_id_71c4b1_idx"),
        ),
        migrations.AddIndex(
            model_name="taskresult",
            index=models.Index(fields=["expires_at"], name="ccv_taskres_expires_4227d2_idx"),
        ),
    ]
