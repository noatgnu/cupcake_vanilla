FROM nginx:alpine

# Install certbot and curl for testing
RUN apk add --no-cache certbot curl

# Create directories for webroot and certificates
RUN mkdir -p /var/www/certbot/.well-known/acme-challenge /etc/letsencrypt

# Create a simple nginx configuration for ACME challenges (fixed webroot path)
RUN echo 'server { \
    listen 80; \
    server_name _; \
    access_log /var/log/nginx/access.log; \
    error_log /var/log/nginx/error.log; \
    root /var/www/certbot; \
    location /.well-known/acme-challenge/ { \
        try_files $uri =404; \
    } \
    location / { \
        return 200 "ACME challenge server running - Host mode test"; \
        add_header Content-Type text/plain; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Create entrypoint script that just runs nginx for testing
COPY <<EOF /entrypoint.sh
#!/bin/sh
set -e

echo "=== Starting ACME Challenge Server for Testing ==="
echo "Domain: \$DOMAIN"
echo "Container IP: \$(hostname -i)"

# Test nginx configuration before starting
echo "Testing nginx configuration..."
nginx -t

# Create the challenge directory structure
mkdir -p /var/www/certbot/.well-known/acme-challenge

# Create a test file
echo "connectivity-test-\$(date)" > /var/www/certbot/.well-known/acme-challenge/connectivity-test.txt
echo "Test file created: /var/www/certbot/.well-known/acme-challenge/connectivity-test.txt"

# Start nginx and keep it running
echo "Starting nginx..."
echo "Access this from outside: http://\$DOMAIN/.well-known/acme-challenge/connectivity-test.txt"
echo "Press Ctrl+C to stop"

nginx -g "daemon off;"
EOF

RUN chmod +x /entrypoint.sh

EXPOSE 80

ENTRYPOINT ["/entrypoint.sh"]
