FROM python:3.11-bookworm

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

RUN curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg > /dev/null
RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt bookworm-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7FCC7D46ACCC4CF8
RUN apt-get update
RUN apt-get -y install postgresql-client-15 ffmpeg cmake git build-essential

WORKDIR /app

RUN git clone https://github.com/ggerganov/whisper.cpp.git
WORKDIR /app/whisper.cpp

RUN /app/whisper.cpp/models/download-ggml-model.sh base.en
RUN /app/whisper.cpp/models/download-ggml-model.sh base
RUN /app/whisper.cpp/models/download-ggml-model.sh small.en
RUN /app/whisper.cpp/models/download-ggml-model.sh small
RUN /app/whisper.cpp/models/download-ggml-model.sh medium.en
RUN /app/whisper.cpp/models/download-ggml-model.sh medium

RUN cmake -B build
RUN cmake --build build --config Release -j $(nproc)

WORKDIR /app

RUN mkdir -p "/app/media" "/app/media/temp" "/app/staticfiles"

RUN pip install --upgrade pip && pip install poetry
RUN poetry config virtualenvs.create false

COPY . /app/

RUN poetry lock
RUN poetry install --only=main

RUN python manage.py collectstatic --noinput

EXPOSE 8000
CMD ["python", "manage.py", "rqworker", "transcribe"]
