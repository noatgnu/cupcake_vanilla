# Debian Buster i386 (32-bit) Dockerfile for CUPCAKE Vanilla
# Using Debian Buster as it's the last Debian with i386 support
FROM --platform=linux/386 python:3.11-bullseye

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV POETRY_VENV_IN_PROJECT=1
ENV POETRY_NO_INTERACTION=1
ENV POETRY_CACHE_DIR=/tmp/poetry_cache
ENV DEBIAN_FRONTEND=noninteractive

# Create app directory
WORKDIR /app

# Create required directories
RUN mkdir -p /app/media/temp /app/staticfiles

# Install Poetry
RUN pip install --no-cache-dir --upgrade pip
RUN pip install --no-cache-dir poetry==1.6.1
RUN poetry config virtualenvs.create false
RUN poetry config cache-dir /tmp/poetry_cache

# Copy dependency files first for better caching
COPY pyproject.toml poetry.lock* /app/

# Install Python dependencies (Debian has better package support for i386)
RUN poetry install --only=main --no-dev --no-root && \
    rm -rf /tmp/poetry_cache

# Copy application code
COPY . /app/

# Install the application itself
RUN poetry install --only=main --no-dev

# Create a non-root user for security
RUN useradd --create-home --shell /bin/bash appuser && \
    chown -R appuser:appuser /app
USER appuser

# Collect static files
RUN python manage.py collectstatic --noinput --clear

# Expose port
EXPOSE 8000

# Use gunicorn with uvicorn workers for ASGI support (WebSocket)
CMD ["gunicorn", \
     "--workers=2", \
     "--worker-class=uvicorn.workers.UvicornWorker", \
     "--bind=0.0.0.0:8000", \
     "--timeout=300", \
     "--keep-alive=2", \
     "--max-requests=1000", \
     "--max-requests-jitter=100", \
     "--preload", \
     "--log-level=info", \
     "--access-logfile=-", \
     "--error-logfile=-", \
     "cupcake_vanilla.asgi:application"]
