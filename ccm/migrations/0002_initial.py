# Generated by Django 5.2.6 on 2025-09-05 12:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("ccc", "0001_initial"),
        ("ccm", "0001_initial"),
        ("ccv", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="historicalinstrument",
            name="metadata_table",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Metadata table for SDRF tagging of this instrument",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccv.metadatatable",
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrument",
            name="remote_host",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccc.remotehost",
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrument",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Owner of this instrument",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentjob",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentjob",
            name="metadata_table",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Metadata table containing job-specific data",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccv.metadatatable",
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentjob",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentusage",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentusage",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentusage",
            name="remote_host",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccc.remotehost",
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentusage",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalmaintenancelog",
            name="annotation_folder",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccc.annotationfolder",
            ),
        ),
        migrations.AddField(
            model_name="historicalmaintenancelog",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalmaintenancelog",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalreagent",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalreagentaction",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalreagentaction",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalstorageobject",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalstorageobject",
            name="remote_host",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccc.remotehost",
            ),
        ),
        migrations.AddField(
            model_name="historicalstorageobject",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalstoredreagent",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalstoredreagent",
            name="metadata_table",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Metadata table for SDRF tagging of this stored reagent",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccv.metadatatable",
            ),
        ),
        migrations.AddField(
            model_name="historicalstoredreagent",
            name="remote_host",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccc.remotehost",
            ),
        ),
        migrations.AddField(
            model_name="historicalstoredreagent",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalsupportinformation",
            name="history_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="instrument",
            name="metadata_table",
            field=models.OneToOneField(
                blank=True,
                help_text="Metadata table for SDRF tagging of this instrument",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instrument",
                to="ccv.metadatatable",
            ),
        ),
        migrations.AddField(
            model_name="instrument",
            name="remote_host",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instruments",
                to="ccc.remotehost",
            ),
        ),
        migrations.AddField(
            model_name="instrument",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="Owner of this instrument",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_instruments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalmaintenancelog",
            name="instrument",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.instrument",
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentusage",
            name="instrument",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.instrument",
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentjob",
            name="instrument",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.instrument",
            ),
        ),
        migrations.AddField(
            model_name="instrumentjob",
            name="instrument",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="instrument_jobs",
                to="ccm.instrument",
            ),
        ),
        migrations.AddField(
            model_name="instrumentjob",
            name="metadata_table",
            field=models.ForeignKey(
                blank=True,
                help_text="Metadata table containing job-specific data",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="instrument_jobs",
                to="ccv.metadatatable",
            ),
        ),
        migrations.AddField(
            model_name="instrumentjob",
            name="staff",
            field=models.ManyToManyField(
                blank=True,
                related_name="assigned_instrument_jobs",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="instrumentjob",
            name="staff_annotations",
            field=models.ManyToManyField(blank=True, related_name="assigned_instrument_jobs", to="ccc.annotation"),
        ),
        migrations.AddField(
            model_name="instrumentjob",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="instrument_jobs",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="instrumentjob",
            name="user_annotations",
            field=models.ManyToManyField(blank=True, related_name="instrument_jobs", to="ccc.annotation"),
        ),
        migrations.AddField(
            model_name="instrumentusage",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="approved_by_instrument_usage",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="instrumentusage",
            name="instrument",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instrument_usage",
                to="ccm.instrument",
            ),
        ),
        migrations.AddField(
            model_name="instrumentusage",
            name="remote_host",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instrument_usages",
                to="ccc.remotehost",
            ),
        ),
        migrations.AddField(
            model_name="instrumentusage",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instrument_usage",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="instrumentjob",
            name="instrument_usage",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="instrument_jobs",
                to="ccm.instrumentusage",
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentjob",
            name="instrument_usage",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.instrumentusage",
            ),
        ),
        migrations.AddField(
            model_name="maintenancelog",
            name="annotation_folder",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="maintenance_logs",
                to="ccc.annotationfolder",
            ),
        ),
        migrations.AddField(
            model_name="maintenancelog",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="maintenance_logs",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="maintenancelog",
            name="instrument",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="maintenance_logs",
                to="ccm.instrument",
            ),
        ),
        migrations.AddField(
            model_name="historicalstoredreagent",
            name="reagent",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.reagent",
            ),
        ),
        migrations.AddField(
            model_name="reagentaction",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reagent_actions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="reagentsubscription",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reagent_subscriptions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="storageobject",
            name="access_lab_groups",
            field=models.ManyToManyField(blank=True, related_name="storage_objects", to="ccc.labgroup"),
        ),
        migrations.AddField(
            model_name="storageobject",
            name="remote_host",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="storage_objects",
                to="ccc.remotehost",
            ),
        ),
        migrations.AddField(
            model_name="storageobject",
            name="stored_at",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="storage_objects",
                to="ccm.storageobject",
            ),
        ),
        migrations.AddField(
            model_name="storageobject",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="storage_objects",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="historicalsupportinformation",
            name="location",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.storageobject",
            ),
        ),
        migrations.AddField(
            model_name="historicalstoredreagent",
            name="storage_object",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.storageobject",
            ),
        ),
        migrations.AddField(
            model_name="historicalstorageobject",
            name="stored_at",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.storageobject",
            ),
        ),
        migrations.AddField(
            model_name="storedreagent",
            name="access_lab_groups",
            field=models.ManyToManyField(blank=True, related_name="shared_reagents", to="ccc.labgroup"),
        ),
        migrations.AddField(
            model_name="storedreagent",
            name="access_users",
            field=models.ManyToManyField(blank=True, related_name="shared_reagents", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="storedreagent",
            name="metadata_table",
            field=models.OneToOneField(
                blank=True,
                help_text="Metadata table for SDRF tagging of this stored reagent",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stored_reagent",
                to="ccv.metadatatable",
            ),
        ),
        migrations.AddField(
            model_name="storedreagent",
            name="reagent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stored_reagents",
                to="ccm.reagent",
            ),
        ),
        migrations.AddField(
            model_name="storedreagent",
            name="remote_host",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stored_reagents",
                to="ccc.remotehost",
            ),
        ),
        migrations.AddField(
            model_name="storedreagent",
            name="storage_object",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stored_reagents",
                to="ccm.storageobject",
            ),
        ),
        migrations.AddField(
            model_name="storedreagent",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stored_reagents",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="reagentsubscription",
            name="stored_reagent",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="subscriptions",
                to="ccm.storedreagent",
            ),
        ),
        migrations.AddField(
            model_name="reagentaction",
            name="reagent",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reagent_actions",
                to="ccm.storedreagent",
            ),
        ),
        migrations.AddField(
            model_name="instrumentjob",
            name="stored_reagent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="instrument_jobs",
                to="ccm.storedreagent",
            ),
        ),
        migrations.AddField(
            model_name="historicalreagentaction",
            name="reagent",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.storedreagent",
            ),
        ),
        migrations.AddField(
            model_name="historicalinstrumentjob",
            name="stored_reagent",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ccm.storedreagent",
            ),
        ),
        migrations.AddField(
            model_name="supportinformation",
            name="location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="instrument_location",
                to="ccm.storageobject",
            ),
        ),
        migrations.AddField(
            model_name="supportinformation",
            name="manufacturer_contacts",
            field=models.ManyToManyField(
                blank=True,
                related_name="manufacturer_contact",
                to="ccm.externalcontact",
            ),
        ),
        migrations.AddField(
            model_name="supportinformation",
            name="vendor_contacts",
            field=models.ManyToManyField(blank=True, related_name="vendor_contact", to="ccm.externalcontact"),
        ),
        migrations.AddField(
            model_name="instrument",
            name="support_information",
            field=models.ManyToManyField(blank=True, to="ccm.supportinformation"),
        ),
        migrations.AlterUniqueTogether(
            name="reagentsubscription",
            unique_together={("user", "stored_reagent")},
        ),
    ]
