# Generated by Django 5.2.6 on 2025-09-05 12:19

import uuid
from decimal import Decimal

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ServiceTier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tier_name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "priority_level",
                    models.IntegerField(default=0, help_text="Higher number = higher priority"),
                ),
                (
                    "features",
                    models.JSONField(default=list, help_text="List of tier features"),
                ),
                ("max_concurrent_bookings", models.IntegerField(blank=True, null=True)),
                ("advance_booking_days", models.IntegerField(default=30)),
                (
                    "base_rate_multiplier",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.0"),
                        help_text="Multiplier applied to base rates",
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.1"))],
                    ),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        help_text="Discount percentage (0-100)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-priority_level", "tier_name"],
            },
        ),
        migrations.CreateModel(
            name="BillableItemType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "default_billing_unit",
                    models.CharField(
                        choices=[
                            ("hourly", "Per Hour"),
                            ("daily", "Per Day"),
                            ("usage", "Per Usage"),
                            ("sample", "Per Sample"),
                            ("flat", "Flat Rate"),
                            ("custom", "Custom"),
                        ],
                        default="hourly",
                        max_length=20,
                    ),
                ),
                ("requires_approval", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalBillableItemType",
            fields=[
                (
                    "id",
                    models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID"),
                ),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "default_billing_unit",
                    models.CharField(
                        choices=[
                            ("hourly", "Per Hour"),
                            ("daily", "Per Day"),
                            ("usage", "Per Usage"),
                            ("sample", "Per Sample"),
                            ("flat", "Flat Rate"),
                            ("custom", "Custom"),
                        ],
                        default="hourly",
                        max_length=20,
                    ),
                ),
                ("requires_approval", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical billable item type",
                "verbose_name_plural": "historical billable item types",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalServiceTier",
            fields=[
                (
                    "id",
                    models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID"),
                ),
                ("tier_name", models.CharField(db_index=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "priority_level",
                    models.IntegerField(default=0, help_text="Higher number = higher priority"),
                ),
                (
                    "features",
                    models.JSONField(default=list, help_text="List of tier features"),
                ),
                ("max_concurrent_bookings", models.IntegerField(blank=True, null=True)),
                ("advance_booking_days", models.IntegerField(default=30)),
                (
                    "base_rate_multiplier",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.0"),
                        help_text="Multiplier applied to base rates",
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(Decimal("0.1"))],
                    ),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        help_text="Discount percentage (0-100)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical service tier",
                "verbose_name_plural": "historical service tiers",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="ServicePrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "billing_unit",
                    models.CharField(
                        choices=[
                            ("hourly", "Per Hour"),
                            ("daily", "Per Day"),
                            ("usage", "Per Usage"),
                            ("sample", "Per Sample"),
                            ("flat", "Flat Rate"),
                            ("custom", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "minimum_charge_units",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        help_text="Minimum billable units (e.g., minimum 1 hour)",
                        max_digits=8,
                    ),
                ),
                (
                    "setup_fee",
                    models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=10),
                ),
                (
                    "bulk_threshold",
                    models.IntegerField(
                        blank=True,
                        help_text="Minimum quantity for bulk pricing",
                        null=True,
                    ),
                ),
                (
                    "bulk_discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                    ),
                ),
                (
                    "effective_from",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("effective_until", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "billable_item_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="ccsc.billableitemtype",
                    ),
                ),
                (
                    "service_tier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="ccsc.servicetier",
                    ),
                ),
            ],
            options={
                "ordering": ["-effective_from"],
                "unique_together": {("billable_item_type", "service_tier", "effective_from")},
            },
        ),
        migrations.CreateModel(
            name="HistoricalServicePrice",
            fields=[
                (
                    "id",
                    models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID"),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "billing_unit",
                    models.CharField(
                        choices=[
                            ("hourly", "Per Hour"),
                            ("daily", "Per Day"),
                            ("usage", "Per Usage"),
                            ("sample", "Per Sample"),
                            ("flat", "Flat Rate"),
                            ("custom", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "minimum_charge_units",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        help_text="Minimum billable units (e.g., minimum 1 hour)",
                        max_digits=8,
                    ),
                ),
                (
                    "setup_fee",
                    models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=10),
                ),
                (
                    "bulk_threshold",
                    models.IntegerField(
                        blank=True,
                        help_text="Minimum quantity for bulk pricing",
                        null=True,
                    ),
                ),
                (
                    "bulk_discount_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                    ),
                ),
                (
                    "effective_from",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("effective_until", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "billable_item_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="ccsc.billableitemtype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "service_tier",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="ccsc.servicetier",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical service price",
                "verbose_name_plural": "historical service prices",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBillingRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                    ),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "setup_fee",
                    models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=10),
                ),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=10),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=10),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("billed", "Billed"),
                            ("paid", "Paid"),
                            ("disputed", "Disputed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("billing_period_start", models.DateTimeField()),
                ("billing_period_end", models.DateTimeField()),
                ("description", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("cost_center", models.CharField(blank=True, max_length=100)),
                ("funder", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "service_price",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="ccsc.serviceprice",
                    ),
                ),
                (
                    "service_tier",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="ccsc.servicetier",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical billing record",
                "verbose_name_plural": "historical billing records",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="BillingRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(Decimal("0"))],
                    ),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "setup_fee",
                    models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=10),
                ),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=10),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=Decimal("0"), max_digits=10),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("billed", "Billed"),
                            ("paid", "Paid"),
                            ("disputed", "Disputed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("billing_period_start", models.DateTimeField()),
                ("billing_period_end", models.DateTimeField()),
                ("description", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("cost_center", models.CharField(blank=True, max_length=100)),
                ("funder", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_billing_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="billing_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "service_price",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="billing_records",
                        to="ccsc.serviceprice",
                    ),
                ),
                (
                    "service_tier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="billing_records",
                        to="ccsc.servicetier",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["user", "status"], name="ccsc_billin_user_id_d34a75_idx"),
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="ccsc_billin_content_310111_idx",
                    ),
                    models.Index(
                        fields=["billing_period_start", "billing_period_end"],
                        name="ccsc_billin_billing_bfc009_idx",
                    ),
                    models.Index(fields=["cost_center"], name="ccsc_billin_cost_ce_bd3159_idx"),
                ],
            },
        ),
    ]
